<div id="sample-map"></div>
<div class="LatLng">
  <div>
    Latitude:<br> <input type="number" value=lat step=0.00000000000001 name="lat" id="lat">
  </div>
  <div>
    Longitude:<br><input type="number" value=lng step=0.000000000000001 name="lng" id="lng">
  </div>
</div>


<script>
  const $sampleMap = document.getElementById('sample-map');
  const $lat = document.getElementById("lat");
  const $lng = document.getElementById("lng");


  const locateUser = () => {
    return new Promise((resolve, reject) => {

      const successHandler = position => {
        const data = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        resolve(data);
      };

      const errorHandler = error => {
        reject(error);
      };

      navigator.geolocation.getCurrentPosition(successHandler, errorHandler);
    });
  };

  function initMap() {
    const map = new window.google.maps.Map($sampleMap, {
      center: { lat: 38.75, lng: -9.15 },
      zoom: 12
    });


    const path = [];

    for (let position of path) {
      new window.google.maps.Marker({ position, map });
    }

    locateUser()
      .then(value => {
        const infoWindow = new window.google.maps.InfoWindow({
          content: 'You are here!',
          position: {
            lat: value.latitude,
            lng: value.longitude
          },
          map
        });
      })
      .catch(error => {
        console.error(error);
      });

    const marker = new window.google.maps.Marker({
      position: {
      },
      map
    });

    let pin;

    map.addListener('click', event => {

      const position = {
        lat: event.latLng.lat(),
        lng: event.latLng.lng()
      };

      $lat.value = position.lat
      $lng.value = position.lng


      if (pin) {
        pin.setMap(null);
      }
      pin = new window.google.maps.Marker({
        position,
        map
      });
    });
  }

</script>


<script src="https://maps.googleapis.com/maps/api/js?key={{process.env.GOOGLE_MAPS_API_KEY}}&callback=initMap" async
  defer></script>